# Application-wide settings
app:
  logger:
    log_directory: ./logs      # Directory where logs will be stored; if empty, logs will be written to stdout
    debug_mode: true           # Enable debug-level logging
  workers: 
    active_consumer_workers: 3      # Number of active Kafka consumer workers
    restart_on_panic: true          # Restart worker if it panics
    restart_delay: 5s               # Delay before restarting a panicked worker
  db:
    connection_check_interval: 5s       # Interval between database connection health checks
    max_rtrs_bfr_cache_only_mode: 3     # Max retries before switching to cache-only mode

# HTTP server configuration
server:
  port: "8081"               # Port where the server will listen
  read_timeout: 10s          # Max duration for reading request
  write_timeout: 10s         # Max duration for writing response
  max_header_bytes: 1048576  # Maximum header size in bytes
  shutdown_timeout: 5s       # Timeout for graceful server shutdown

# Cache configuration
cache:
  save_in_cache: true                  # Enable caching of orders
  cache_size: 10                       # Max number of orders to keep in cache
  background_cleanup: true             # Run periodic cleanup of expired cache entries
  cleanup_interval: 40s                # Interval between cache cleanups
  clnr_pause_on_db_conn_check: 5s      # Interval between DB connection checks while paused
  order_ttl: 30s                       # Time-to-live for cached orders

# Database connection settings
database:
  driver: postgres            # Database driver to use 
  host: localhost             # Database host address
  port: 5433                  # Database port
  username: Neo               # Database username
  dbname: wb-service-db       # Name of the database to connect to
  sslmode: disable            # SSL mode for the connection 
  max_open_conns: 57          # Maximum number of open DB connections
  max_idle_conns: 25          # Maximum number of idle DB connections
  conn_max_lifetime: 1h       # Max lifetime of a DB connection
  conn_max_idle_time: 5m      # Max idle time before closing a connection

# Kafka configuration
kafka:
  consumer:
    brokers:
      - localhost:9092                     # List of Kafka brokers for the consumer
    topic: orders                          # Topic to consume messages from
    client_id: order-consumer              # Consumer client ID
    group_id: order-consumers              # Consumer group ID
    enable_auto_commit: false              # Disable auto-committing offsets
    auto_offset_reset: earliest            # Start reading from the earliest offset if no offset is found
    session_timeout_ms: 10000              # Timeout for consumer session in milliseconds
    max_poll_interval_ms: 300000           # Maximum interval between polls before considered dead
    save_order_retry_delay: 5s             # Delay between retries when saving order fails
    save_order_retry_max: 3                # Max number of retries when saving order fails
    commit_retry_delay: 5s                 # Delay between retries when committing offsets fails
    commit_retry_max: 3                    # Max number of retries when committing offsets fails
    event_type_errors_max: 3               # Max allowed errors of the same event type before handling
    event_type_error_retry_delay: 10s      # Delay between retries for event type errors
  producer:
    brokers:
      - localhost:9092             # List of Kafka brokers for the producer
    topic: orders                  # Topic to produce orders to
    client_id: order-producer      # Orders producer client ID
    messages_to_send: 10           # Number of messages (orders) to send
    flush_time_out_ms: 5000        # Maximum time to wait for message flush
    produce_retry_attempts: 5      # Number of application-level retry attempts for sending order to Kafka
    produce_retry_delay: 5s        # Delay between application-level retry attempts
    event_timeout: 5s              # Overall timeout for event processing
    acks: all                      # Number of replicas that must acknowledge writes (all, -1, 0, 1)
    retry_max: 3                   # Maximum number of automatic retry attempts by Kafka library
    linger_ms: 5                   # Time to wait before sending a batch
    batch_size: 65536              # Maximum batch size in bytes
    compression_type: snappy       # Compression algorithm for messages
    enable_idempotence: true       # Enable idempotent producer to prevent duplicates
  dlq:                           
    brokers:
      - localhost:9092                 # List of Kafka brokers for the DLQ (Dead Letter Queue)
    topic: orders-dlq                  # Topic for failed messages
    client_id: order-dlq-producer      # DLQ producer client ID
    flush_time_out_ms: 5000            # Maximum time to wait for message flush
    produce_retry_attempts: 5          # Number of application-level retry attempts for sending order to the DLQ
    produce_retry_delay: 5s            # Delay between application-level retry attempts
    event_timeout: 5s                  # Overall timeout for event processing
    acks: all                          # Number of replicas that must acknowledge writes (all, -1, 0, 1)
    retry_max: 3                       # Maximum number of automatic retry attempts by Kafka library
    linger_ms: 5                       # Time to wait before sending a batch
    batch_size: 65536                  # Maximum batch size in bytes
    compression_type: snappy           # Compression algorithm for messages
    enable_idempotence: true           # Enable idempotent producer to prevent duplicates

# Notifier configuration
notifier:
  telegram:
    chat_id: "805862991"      # Your own Telegram chat ID is required to receive notifications.
                              # And don't forget to provide bot token in .env.example.
